generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model gh_User {
  user_id           BigInt               @id @default(autoincrement())
  created_at        DateTime?            @db.DateTime(6)
  deleted_at        DateTime?            @db.DateTime(6)
  updated_at        DateTime?            @db.DateTime(6)
  birth             DateTime             @db.Date
  email             String               @unique @db.VarChar(255)
  nickname          String               @unique @db.VarChar(255)
  password          String               @db.VarChar(255)
  phone_num         String               @unique @db.VarChar(255)
  provider          String               @db.VarChar(255)
  name              String               @db.VarChar(255)
  user_type         String               @db.VarChar(255)
  social_uuid       String?              @db.VarChar(255)
  member_in_channel gh_MemberInChannel[]
  social            gh_Social?           @relation(fields: [social_uuid], references: [uuid], onDelete: NoAction, onUpdate: NoAction, map: "FKhw5fuitvi0il1bgo88gu1mrbd")
  gh_ChannelInfo    gh_ChannelInfo[]

  @@index([social_uuid])
  @@map("user")
}

model gh_Social {
  uuid       String    @id @db.VarChar(255)
  identifier String?   @db.VarChar(255)
  user_uuid  String    @unique @db.VarChar(255)
  user       gh_User[]

  @@map("social")
}

model gh_MemberInChannel {
  id         BigInt         @id @default(autoincrement())
  channel    gh_ChannelInfo @relation(fields: [channel_id], references: [id])
  channel_id String         @db.Char(36)
  user       gh_User        @relation(fields: [user_email], references: [email])
  user_email String         @db.VarChar(255)

  @@unique([user_email, channel_id])
  @@index([channel_id], map: "member_in_channel_channel_id_fkey")
  @@map("member_in_channel")
}

model gh_ChannelInfo {
  id       String               @id @db.Char(36)
  name     String               @unique
  owner    gh_User              @relation(fields: [owner_id], references: [user_id])
  owner_id BigInt
  members  gh_MemberInChannel[]

  @@map("channel_info")
}

model gh_Channel_Token {
  id            BigInt    @id @default(autoincrement())
  refresh_token String    @unique
  user_email    String    @unique
  created_at    DateTime  @default(now()) @db.DateTime()
  expires_at    DateTime? @db.DateTime()

  @@map("channel_token")
}
